plugins {
    id('com.android.library')
    id("org.jetbrains.kotlin.multiplatform")
    id("org.jetbrains.kotlin.native.cocoapods")
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'com.squareup.sqldelight'

group = "ch.dreipol.multiplatform.reduxsample.shared"
version = "1.0"

ext.getDreiMultiplatformProject = {
    Properties properties = new Properties()
    File localProperties = new File(rootProject.projectDir.absolutePath + '/local.properties')
    String dreimultiplatformDir = null
    if (localProperties.exists()) {
        properties.load(localProperties.newDataInputStream())
        dreimultiplatformDir = properties.getProperty('dreimultiplatform.dir')
    }
    if (dreimultiplatformDir != null) {
        return project(":dreimultiplatform")
    } else {
        return "ch.dreipol:dreimultiplatform:$dreimultiplatform_version"
    }
}

kotlin {
    android("android") {
    }
    ios("ios") {
        binaries.withType(org.jetbrains.kotlin.gradle.plugin.mpp.Framework).all {
            transitiveExport = true
            export(getDreiMultiplatformProject())
        }
    }

    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Multiplatform Redux Sample"
        homepage = "https://github.com/dreipol/multiplatform-redux-sample"
        ios.deploymentTarget = "13.0"
        frameworkName = "ReduxSampleShared"
    }

    sourceSets["commonMain"].dependencies {
        api("io.ktor:ktor-client-serialization:$ktor_version")
        implementation("io.ktor:ktor-client-core:$ktor_version")
        implementation("io.ktor:ktor-client-json:$ktor_version")
        implementation("io.ktor:ktor-client-logging:$ktor_version")
        implementation("com.russhwolf:multiplatform-settings:${mpf_settings}")
        implementation("com.russhwolf:multiplatform-settings-no-arg:${mpf_settings}")
        implementation("org.jetbrains.kotlinx:kotlinx-datetime:$datetime_version")
        api getDreiMultiplatformProject()
    }

    sourceSets["commonTest"].dependencies {
        implementation("org.jetbrains.kotlin:kotlin-test-common")
        implementation("org.jetbrains.kotlin:kotlin-test-annotations-common")
    }


    sourceSets["androidMain"].dependencies {
        implementation("androidx.appcompat:appcompat:1.1.0")
        implementation("io.ktor:ktor-client-android:${ktor_version}")
        implementation "com.squareup.sqldelight:android-driver:${sqldelight_version}"
        api("org.jetbrains.kotlinx:kotlinx-datetime:$datetime_version")

    }

    sourceSets["androidTest"].dependencies {
        implementation("org.jetbrains.kotlin:kotlin-test-junit")
    }


    sourceSets["iosMain"].dependencies {
        implementation("io.ktor:ktor-client-ios:${ktor_version}")
        implementation "com.squareup.sqldelight:native-driver:${sqldelight_version}"
    }
}

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 23
    }
    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
        }
    }
    buildTypes {
        //This is for MultiplatformSettings
        debug {
            // MPP libraries don't currently get this resolution automatically
            matchingFallbacks = ['release']
        }
        release {
            minifyEnabled true
        }
    }
}

sqldelight {
    Database { // This will be the name of the generated database class.
        packageName = "ch.dreipol.multiplatform.reduxsample.shared.delight"
    }
}

ktlint {
    ignoreFailures.set(false)
    filter {
        exclude { element -> element.file.path.contains("generated/") }
    }
}

preBuild.dependsOn ktlintFormat

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}
